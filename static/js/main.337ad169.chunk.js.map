{"version":3,"sources":["components/Card/card.module.css","components/Card/Cards.jsx","components/Charts/Charts.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/chart.module.css"],"names":["module","exports","Cards","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Charts","console","log","lineChart","data","labels","datasets","label","borderColor","fill","backgroundColor","url","fetchData","country","a","changeableURL","axios","get","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchApiCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","setData","setCountry","responseData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.337ad169.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__2haMM\",\"card\":\"card_card__K_HqU\",\"infected\":\"card_infected__1lVfD\",\"recovered\":\"card_recovered__3Fcwt\",\"deaths\":\"card_deaths__1dtYF\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport cx from 'classnames'\r\nimport styles from \"./card.module.css\";\r\n\r\nconst Cards = ({ confirmed, recovered, deaths, lastUpdate }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovery from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './chart.module.css'\r\n\r\nconst Charts = ({ confirmed, recovered }) => {\r\n  \r\n  if(confirmed && recovered) {\r\n    console.log([confirmed.value])\r\n  }\r\n  const lineChart = ( \r\n    (confirmed && recovered) ? (\r\n    <Line \r\n      data={{\r\n        labels: '',\r\n        datasets: [{\r\n          data: [0, confirmed.value],\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true\r\n        }, {\r\n          data: [0, recovered.value],\r\n          label: 'Recovered',\r\n          borderColor: 'green',\r\n          backgroundColor: 'rgba(0,255,0,.5)',\r\n          fill: true\r\n        }]\r\n      }}\r\n    /> ): null\r\n  )\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      {lineChart}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Charts;","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableURL = url\r\n  if(country) {\r\n    changeableURL = `${url}/countries/${country}`\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableURL);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  \r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`)\r\n    return countries.map(country => country.name)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './countryPicker.module.css'\r\nimport { fetchCountries } from '../../api'\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]) \r\n\r\n  useEffect(() => {\r\n    const fetchApiCountries = async () => {\r\n      setFetchedCountries(await fetchCountries())\r\n    }\r\n    fetchApiCountries()\r\n  }, [setFetchedCountries])\r\n\r\n  \r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"Global\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;","import React, { useEffect, useState } from \"react\";\n\nimport styles from './App.module.css'\n\nimport { Cards, Charts, CountryPicker } from './components'\nimport { fetchData } from './api'\n\nexport default function App() {\n  const [data, setData] = useState([])\n  const [country, setCountry] = useState([])\n\n  const handleCountryChange = async (country) => {\n      \n     setData(await fetchData(country))\n     setCountry(await fetchData(country))    \n     \n  }\n\n  useEffect(() => {\n    const responseData = async () =>  {\n      setData(await fetchData())\n    }\n    responseData()\n  }, [])\n\n  console.log('country')  \n  return (\n    <div className={styles.container}> \n      <Cards {...data}/> \n      <CountryPicker handleCountryChange={handleCountryChange}/>\n      <Charts {...country} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2O8_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__2Vpmw\"};"],"sourceRoot":""}